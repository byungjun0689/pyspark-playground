[SERVICE]
    flush        1
    log_level    info
    parsers_file parsers_multiline.conf

[INPUT]
    name             tail
    path             /opt/airflow/logs/dag/*/*.log
    read_from_head   true
    multiline.parser multiline-regex-test

[FILTER]
    name             parser
    match            *
    key_name         log
    parser           named-capture-test


# [FILTER]
#     Name        grep
#     Match       airflow_logs
#     Regex       log ^[0-9]{2}/[0-9]{2}/[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2} ERROR .*

# [FILTER]
#     Name        grep
#     Match       airflow_logs
#     #Regex       log ^[0-9]{2}/[0-9]{2}/[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2} INFO KHCLogger: Step [0-9]{1,2}: [0-9]{1,2}:[0-9]{2}:[0-9]{2}
#     #Regex       log ^\d{2}/\d{2}/\d{2} \d{2}:\d{2}:\d{2} INFO KHCLogger: Step \d+: \d+:\d+:\d+
#     Regex       log ^\d{2}/\d{2}/\d{2} \d{2}:\d{2}:\d{2} (ERROR|INFO KHCLogger: Step \d+: \d+:\d+:\d+)

# [FILTER]
#     Name        lua
#     Match       airflow_logs
#     Script      /opt/fluent-bit/airflow_filter.lua
#     Call        filter_khc_airflow_log

[OUTPUT]
    name             stdout
    match            *

# [OUTPUT]
#     Name        es
#     Match       *
#     Host        es-local-dev
#     Port        9200
#     Index       yarn_logs
#     http_user   elastic
#     http_passwd IYXuYRbv
#     Suppress_Type_Name true

[OUTPUT]
    Name        loki
    Match       *
    host        loki
    port        3100
    labels                 job=airflow, date=$date, level=$level
    label_keys             $sub['stream']
